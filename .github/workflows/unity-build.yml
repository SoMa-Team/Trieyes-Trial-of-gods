name: Unity Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Unity Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Cache Library/ScriptAssemblies
        uses: actions/cache@v3
        with:
          path: Library/ScriptAssemblies
          key: ScriptAssemblies-${{ hashFiles('Assets/**/*.cs', 'Packages/**/*.cs') }}
          restore-keys: |
            ScriptAssemblies-

      - name: Unity - Build Windows
        uses: game-ci/unity-builder@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: StandaloneWindows64
          buildName: Trieyes-Trial-of-gods
          buildPath: build/Windows
          versioning: Semantic

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows Build
          path: build/Windows

      - name: Unity - Build Android
        uses: game-ci/unity-builder@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          ANDROID_KEYSTORE_NAME: ${{ secrets.ANDROID_KEYSTORE_NAME }}
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          ANDROID_KEYALIAS_NAME: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          ANDROID_KEYALIAS_PASS: ${{ secrets.ANDROID_KEYALIAS_PASS }}
        with:
          targetPlatform: Android
          buildName: Trieyes-Trial-of-gods
          buildPath: build/Android
          versioning: Semantic

      - name: Upload Android Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Android Build
          path: build/Android

      - name: Unity - Test Runner
        uses: game-ci/unity-test-runner@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          customParameters: -batchmode -nographics -executeMethod UnityEditor.TestTools.TestRunner.Api.TestRunnerApi.Execute -quit

      - name: Unity - Activate License
        uses: game-ci/unity-request-activation-file@v3
        id: getManualLicenseFile

      - name: Unity - Cache License
        uses: actions/cache@v3
        with:
          path: ${{ secrets.UNITY_LICENSE_PATH }}
          key: ${{ steps.getManualLicenseFile.outputs.licensePath }}

      - name: Unity - Return License
        if: always()
        uses: game-ci/unity-return-license@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }} 